{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-crud\\\\my-app\\\\src\\\\component\\\\tenstackTable\\\\TenstackTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow, Table, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyTableComponent() {\n  _s();\n  const [values, setValues] = useState([]);\n  console.log(\"values === \", va);\n  const columnHelper = createColumnHelper();\n  const column = [columnHelper.accessor('id', {\n    columnHelper: \"Customer Id\"\n  }), columnHelper.accessor('name', {\n    header: \"Name\"\n  }), columnHelper.accessor('email', {\n    header: \"Email\"\n  }), columnHelper.accessor('phone', {\n    header: \"mobile no\"\n  }), columnHelper.accessor('Refrence', {\n    header: \"Reference\"\n  }), columnHelper.accessor('current_address', {\n    header: \"current_address\"\n  }), columnHelper.accessor('permanent_address', {\n    header: \"permanent_address\"\n  }), columnHelper.accessor('create_at', {\n    header: \"create_at\"\n  }), columnHelper.accessor('update_at', {\n    header: \"update_at\"\n  })];\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8000/api/v1/admin/getCustomer\");\n        console.log(\"response data\", res.data);\n        setValues(res.data);\n      } catch (error) {\n        console.log('error genrated', error);\n      }\n    };\n    getData();\n  }, []);\n  const table = useReactTable({\n    data: values,\n    columns: column,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: table.getHeaderGroups().map(headerGroups => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: headerGroups.headers.map(header => {\n              /*#__PURE__*/_jsxDEV(TableCell, {\n                children: flexRender(header.column.columnDef.header, header.getContext())\n              }, header.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 49\n              }, this);\n            })\n          }, headerGroups.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: table.getRowModel().rows.map(row => {\n            /*#__PURE__*/_jsxDEV(TableRow, {\n              children: row.getVisibleCells().map(cell => {\n                /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: flexRender(cell.column.columnDef.cell, cell.getContext())\n                }, cell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 45\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(MyTableComponent, \"iJcAWkg8sQgjlohWo4BiyAypdo4=\", false, function () {\n  return [useReactTable];\n});\n_c = MyTableComponent;\nexport default MyTableComponent;\nvar _c;\n$RefreshReg$(_c, \"MyTableComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","createColumnHelper","flexRender","getCoreRowModel","useReactTable","TableBody","TableCell","TableContainer","TableHead","TableRow","Table","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTableComponent","_s","values","setValues","console","log","va","columnHelper","column","accessor","header","getData","res","get","data","error","table","columns","children","component","getHeaderGroups","map","headerGroups","headers","columnDef","getContext","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["E:/react-crud/my-app/src/component/tenstackTable/TenstackTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\r\nimport { TableBody, TableCell, TableContainer, TableHead, TableRow,Table, Paper } from \"@mui/material\";\r\n\r\n\r\n\r\nfunction MyTableComponent(){\r\n\r\n    const [values, setValues] = useState([]);\r\n\r\n    console.log(\"values === \", va);\r\n\r\n\r\n    const columnHelper = createColumnHelper();\r\n\r\n    const column = [\r\n        columnHelper.accessor('id',{\r\n            columnHelper : \"Customer Id\"\r\n        }),\r\n        columnHelper.accessor('name', {\r\n            header : \"Name\"\r\n        }),\r\n        columnHelper.accessor('email',{\r\n            header : \"Email\"\r\n        }),\r\n        columnHelper.accessor('phone',{\r\n            header : \"mobile no\"\r\n        }),\r\n        columnHelper.accessor('Refrence',{\r\n            header : \"Reference\"\r\n        }),\r\n        columnHelper.accessor('current_address',{\r\n            header : \"current_address\"\r\n        }),\r\n        columnHelper.accessor('permanent_address',{\r\n            header : \"permanent_address\"\r\n        }),\r\n        columnHelper.accessor('create_at',{\r\n            header : \"create_at\"\r\n        }),\r\n        columnHelper.accessor('update_at',{\r\n            header : \"update_at\"\r\n        })\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        const getData = async () =>{\r\n            try {\r\n                const res = await axios.get(\"http://localhost:8000/api/v1/admin/getCustomer\")\r\n                console.log(\"response data\", res.data);\r\n                setValues(res.data)\r\n            } catch (error) {\r\n                console.log('error genrated', error);\r\n            }\r\n        }\r\n        getData();\r\n    },[])\r\n    \r\n\r\n    const table = useReactTable({\r\n        data : values,\r\n        columns: column,\r\n        getCoreRowModel : getCoreRowModel(),\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            {\r\n                                table.getHeaderGroups().map(headerGroups =>(\r\n                                    <TableRow key={headerGroups.id}>\r\n                                        {\r\n                                            headerGroups.headers.map((header) =>{\r\n                                                <TableCell key={header.id}>\r\n                                                    {\r\n                                                        flexRender(header.column.columnDef.header, header.getContext())\r\n                                                    }\r\n                                                </TableCell>\r\n                                            })\r\n                                        }\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                table.getRowModel().rows.map((row)=>{\r\n                                    <TableRow key={row.id}>\r\n                                        {row.getVisibleCells().map((cell)=>{\r\n                                            <TableCell key={cell.id}>\r\n                                                {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                            </TableCell>\r\n                                        })}\r\n                                    </TableRow>\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n        </>\r\n    )\r\n}\r\nexport default MyTableComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}