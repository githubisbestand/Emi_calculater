{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\n//create action\n\nexport const createUser = createAsyncThunk(\"createUser\", async (data, {\n  rejectWithValue\n}) => {\n  const response = await axios.post(\"http://localhost:5000/singup\", data);\n  try {\n    const result = await response.json(data);\n    return result;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\n\n// read action\n\nconst showUser = createAsyncThunk(\"showUser\", async ({\n  rejectWithValue\n}) => {\n  const response = await axios.get(\"ttp://localhost:5000/\");\n  try {\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const userDetail = createSlice({\n  name: \"userDetail\",\n  initialState: {\n    user: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUser.pending, state => {\n      state.loading = true;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user.push(action.payload);\n    }).addCase(createUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(showUser.pending, state => {\n      state.loading = true;\n    }).addCase(showUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(showUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default userDetail.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createUser","data","rejectWithValue","response","post","result","json","error","showUser","get","userDetail","name","initialState","user","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["E:/react-crud/my-app/src/features/userDatailsSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\n//create action\r\n\r\nexport const createUser = createAsyncThunk(\"createUser\", async (data, {rejectWithValue})=>{\r\n\r\n    const response = await axios.post(\"http://localhost:5000/singup\",data);\r\n\r\n    try{\r\n        const result = await response.json(data);\r\n        return result;\r\n    }catch(error){\r\n        return rejectWithValue(error);\r\n    }\r\n\r\n\r\n})\r\n\r\n// read action\r\n\r\nconst showUser = createAsyncThunk(\"showUser\", async({rejectWithValue})=>{\r\n    const response = await axios.get(\"ttp://localhost:5000/\");\r\n\r\n    try {\r\n        const result = await response.json();\r\n        return result;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n})\r\n\r\nexport const userDetail = createSlice({\r\n    name: \"userDetail\",\r\n    initialState: {\r\n        user: [],\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(createUser.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(createUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user.push(action.payload);\r\n            })\r\n            .addCase(createUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n             .addCase(showUser.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(showUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            })\r\n            .addCase(showUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n            \r\n    },\r\n});\r\n\r\n\r\nexport default userDetail.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,YAAY,EAAE,OAAOG,IAAI,EAAE;EAACC;AAAe,CAAC,KAAG;EAEtF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,8BAA8B,EAACH,IAAI,CAAC;EAEtE,IAAG;IACC,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAACL,IAAI,CAAC;IACxC,OAAOI,MAAM;EACjB,CAAC,QAAME,KAAK,EAAC;IACT,OAAOL,eAAe,CAACK,KAAK,CAAC;EACjC;AAGJ,CAAC,CAAC;;AAEF;;AAEA,MAAMC,QAAQ,GAAGV,gBAAgB,CAAC,UAAU,EAAE,OAAM;EAACI;AAAe,CAAC,KAAG;EACpE,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,uBAAuB,CAAC;EAEzD,IAAI;IACA,MAAMJ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOL,eAAe,CAACK,KAAK,CAAC;EACjC;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAGb,WAAW,CAAC;EAClCc,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,KAAK;IACdP,KAAK,EAAE;EACX,CAAC;EACDQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAClB,UAAU,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDI,OAAO,CAAClB,UAAU,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,CAACU,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC,CAAC,CAAC,CACDN,OAAO,CAAClB,UAAU,CAACyB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACE,OAAO;IAChC,CAAC,CAAC,CACAN,OAAO,CAACV,QAAQ,CAACW,OAAO,EAAGC,KAAK,IAAK;MACnCA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDI,OAAO,CAACV,QAAQ,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACE,OAAO;IAC/B,CAAC,CAAC,CACDN,OAAO,CAACV,QAAQ,CAACiB,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACE,OAAO;IAChC,CAAC,CAAC;EAEV;AACJ,CAAC,CAAC;AAGF,eAAed,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}