{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const createUser = createAsyncThunk(\"createUser\", async (values, rejectWithValue) => {\n  const response = await fetch(\"http://localhost:5000/singup\", {\n    method: \"POST\",\n    headers: {\n      \"contentType\": \"application/json\"\n    },\n    body: JSON.stringify(values)\n  });\n  try {\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const userDetail = createSlice({\n  name: \"userDetail\",\n  initialState: {\n    user: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUser.pending, state => {\n      state.loading = true;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user.push(action.payload);\n    }).addCase(createUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default userDetail.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createUser","values","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","result","json","error","userDetail","name","initialState","user","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["E:/react-crud/my-app/src/features/userDatailsSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const createUser = createAsyncThunk(\"createUser\", async (values, rejectWithValue)=>{\r\n\r\n    const response = await fetch(\"http://localhost:5000/singup\",{\r\n        method :\"POST\",\r\n        headers :{\r\n            \"contentType\" : \"application/json\",\r\n        },\r\n        body : JSON.stringify(values)\r\n    })\r\n\r\n    try{\r\n        const result = await response.json();\r\n        return result;\r\n    }catch(error){\r\n        return rejectWithValue(error);\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\nexport const userDetail = createSlice({\r\n    name: \"userDetail\",\r\n    initialState: {\r\n        user: [],\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(createUser.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(createUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user.push(action.payload);\r\n            })\r\n            .addCase(createUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\n\r\nexport default userDetail.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,YAAY,EAAE,OAAOE,MAAM,EAAEC,eAAe,KAAG;EAEtF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,aAAa,EAAG;IACpB,CAAC;IACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACR,MAAM;EAChC,CAAC,CAAC;EAEF,IAAG;IACC,MAAMS,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACjB,CAAC,QAAME,KAAK,EAAC;IACT,OAAOV,eAAe,CAACU,KAAK,CAAC;EACjC;AAGJ,CAAC,CAAC;AAGF,OAAO,MAAMC,UAAU,GAAGf,WAAW,CAAC;EAClCgB,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE;EACX,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACrB,UAAU,CAACsB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDI,OAAO,CAACrB,UAAU,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,CAACU,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC,CAAC,CAAC,CACDN,OAAO,CAACrB,UAAU,CAAC4B,QAAQ,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACE,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAGF,eAAed,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}