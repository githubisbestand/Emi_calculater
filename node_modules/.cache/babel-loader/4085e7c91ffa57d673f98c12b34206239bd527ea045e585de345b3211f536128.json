{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * AnimationFrame provides a user-friendly abstraction around requesting\n * and canceling animation frames.\n */\nvar AnimationFrame = /** @class */function () {\n  function AnimationFrame() {\n    this.rafIDs = new Map();\n  }\n  /**\n   * Requests an animation frame. Cancels any existing frame with the same key.\n   * @param {string} key The key for this callback.\n   * @param {FrameRequestCallback} callback The callback to be executed.\n   */\n  AnimationFrame.prototype.request = function (key, callback) {\n    var _this = this;\n    this.cancel(key);\n    var frameID = requestAnimationFrame(function (frame) {\n      _this.rafIDs.delete(key);\n      // Callback must come *after* the key is deleted so that nested calls to\n      // request with the same key are not deleted.\n      callback(frame);\n    });\n    this.rafIDs.set(key, frameID);\n  };\n  /**\n   * Cancels a queued callback with the given key.\n   * @param {string} key The key for this callback.\n   */\n  AnimationFrame.prototype.cancel = function (key) {\n    var rafID = this.rafIDs.get(key);\n    if (rafID) {\n      cancelAnimationFrame(rafID);\n      this.rafIDs.delete(key);\n    }\n  };\n  /**\n   * Cancels all queued callback.\n   */\n  AnimationFrame.prototype.cancelAll = function () {\n    var _this = this;\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach(function (_, key) {\n      _this.cancel(key);\n    });\n  };\n  /**\n   * Returns the queue of unexecuted callback keys.\n   */\n  AnimationFrame.prototype.getQueue = function () {\n    var queue = [];\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach(function (_, key) {\n      queue.push(key);\n    });\n    return queue;\n  };\n  return AnimationFrame;\n}();\nexport { AnimationFrame };","map":{"version":3,"names":["AnimationFrame","rafIDs","Map","prototype","request","key","callback","_this","cancel","frameID","requestAnimationFrame","frame","delete","set","rafID","get","cancelAnimationFrame","cancelAll","forEach","_","getQueue","queue","push"],"sources":["animationframe.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;AAIA,IAAAA,cAAA;EAAA,SAAAA,eAAA;IACmB,KAAAC,MAAM,GAAG,IAAIC,GAAG,EAAkB;EAuDrD;EArDE;;;;;EAKAF,cAAA,CAAAG,SAAA,CAAAC,OAAO,GAAP,UAAQC,GAAW,EAAEC,QAA8B;IAAnD,IAAAC,KAAA;IACE,IAAI,CAACC,MAAM,CAACH,GAAG,CAAC;IAChB,IAAMI,OAAO,GAAGC,qBAAqB,CAAC,UAACC,KAAK;MAC1CJ,KAAI,CAACN,MAAM,CAACW,MAAM,CAACP,GAAG,CAAC;MACvB;MACA;MACAC,QAAQ,CAACK,KAAK,CAAC;IACjB,CAAC,CAAC;IACF,IAAI,CAACV,MAAM,CAACY,GAAG,CAACR,GAAG,EAAEI,OAAO,CAAC;EAC/B,CAAC;EAED;;;;EAIAT,cAAA,CAAAG,SAAA,CAAAK,MAAM,GAAN,UAAOH,GAAW;IAChB,IAAMS,KAAK,GAAG,IAAI,CAACb,MAAM,CAACc,GAAG,CAACV,GAAG,CAAC;IAClC,IAAIS,KAAK,EAAE;MACTE,oBAAoB,CAACF,KAAK,CAAC;MAC3B,IAAI,CAACb,MAAM,CAACW,MAAM,CAACP,GAAG,CAAC;;EAE3B,CAAC;EAED;;;EAGAL,cAAA,CAAAG,SAAA,CAAAc,SAAS,GAAT;IAAA,IAAAV,KAAA;IACE;IACA;IACA;IACA,IAAI,CAACN,MAAM,CAACiB,OAAO,CAAC,UAACC,CAAC,EAAEd,GAAG;MACzBE,KAAI,CAACC,MAAM,CAACH,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGAL,cAAA,CAAAG,SAAA,CAAAiB,QAAQ,GAAR;IACE,IAAMC,KAAK,GAAa,EAAE;IAC1B;IACA;IACA;IACA,IAAI,CAACpB,MAAM,CAACiB,OAAO,CAAC,UAACC,CAAC,EAAEd,GAAG;MACzBgB,KAAK,CAACC,IAAI,CAACjB,GAAG,CAAC;IACjB,CAAC,CAAC;IACF,OAAOgB,KAAK;EACd,CAAC;EACH,OAAArB,cAAC;AAAD,CAAC,CAxDD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}