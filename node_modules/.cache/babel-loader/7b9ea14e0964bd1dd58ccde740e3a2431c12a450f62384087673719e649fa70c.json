{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-crud\\\\my-app\\\\src\\\\form\\\\form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  //   const [values, stValue] = useState({\n  //       name : \" \",\n  //       email : \" \",\n  //       password : \" \"\n  //   })\n\n  //   const [error, setError] = useState({\n  //     name : \" \",\n  //     email : \" \",\n  //     password : \" \"\n  //   })\n\n  //   const handleChange = (e) =>{\n  //     stValue({...values, [e.target.name]:e.target.value})\n  //         const [ name, value] = e.target;\n\n  //         if(name === \"name\" && value.length < 5){\n  //             setError(prevError => ({...prevError, name : \"* name is required\"}))\n  //         }\n  //         if(name === \"email\" &&  !/\\S+@\\S+\\.\\S+/.test(value)){\n  //             setError(prevError => ({...prevError, email : \"* email is not vailed\"}))\n  //         }\n\n  //         if(name === \"password\" && value.length<6){\n  //             setError(prevError =>({...prevError, password : \"* password almost six carector\"}))\n  //         }else{\n  //             setError(prevError => ({ ...prevError, [name]: '' }));\n  //         }\n  //   }\n\n  //   function validateForm() {\n  //     const newError = {};\n  //     if(!values.name) newError.name = '* name is required';\n\n  //     if(!values.email) newError.email = '* email is required';\n  //     else if(!/\\S+@\\S+\\.\\S+/.test(values.email)) newError.email = '* Email is not valid';\n  //     if(!values.length < 6) newError.password = '* password atlest 6 digit'\n  //   }\n\n  //   const handelSumbit = (e) =>{\n  //     e.preventDefault();\n  //     if(!validateForm){\n  //         return;\n  //     }\n  //   }\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n    let errorMsg = '';\n    if (name === 'name' && value.length < 5) {\n      errorMsg = '* Name must be at least 5 characters';\n    } else if (name === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\n      errorMsg = '* Email is not valid';\n    } else if (name === 'password' && value.length < 6) {\n      errorMsg = '* Password must be at least 6 characters';\n    }\n    setError({\n      ...error,\n      [name]: errorMsg\n    });\n  };\n  const validateForm = () => {\n    const newError = {};\n    if (!values.name) newError.name = '* Name is required';\n    if (!values.email) newError.email = '* Email is required';else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) newError.email = '* Email is not valid';\n    if (!values.password) newError.password = '* Password is required';else if (values.password.length < 6) newError.password = '* Password must be at least 6 characters';\n    setError(newError);\n    return Object.keys(newError).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log('Form submitted successfully', values);\n      // Add your form submission logic here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"text name\",\n          value: values.name,\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), error.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter email : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"text email\",\n          value: values.email,\n          name: \"email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), error.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          value: values.password,\n          name: \"password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), error.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"BLOo/ZYfbTYvyELik9AeF04/doI=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","values","setValues","name","email","password","error","setError","handleChange","e","value","target","errorMsg","length","test","validateForm","newError","Object","keys","handleSubmit","preventDefault","console","log","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","_c","$RefreshReg$"],"sources":["E:/react-crud/my-app/src/form/form.js"],"sourcesContent":[" import React, { useState } from 'react'\r\n\r\nconst Form = () => {\r\n  \r\n//   const [values, stValue] = useState({\r\n//       name : \" \",\r\n//       email : \" \",\r\n//       password : \" \"\r\n//   })\r\n\r\n//   const [error, setError] = useState({\r\n//     name : \" \",\r\n//     email : \" \",\r\n//     password : \" \"\r\n//   })\r\n\r\n\r\n//   const handleChange = (e) =>{\r\n//     stValue({...values, [e.target.name]:e.target.value})\r\n//         const [ name, value] = e.target;\r\n\r\n//         if(name === \"name\" && value.length < 5){\r\n//             setError(prevError => ({...prevError, name : \"* name is required\"}))\r\n//         }\r\n//         if(name === \"email\" &&  !/\\S+@\\S+\\.\\S+/.test(value)){\r\n//             setError(prevError => ({...prevError, email : \"* email is not vailed\"}))\r\n//         }\r\n\r\n//         if(name === \"password\" && value.length<6){\r\n//             setError(prevError =>({...prevError, password : \"* password almost six carector\"}))\r\n//         }else{\r\n//             setError(prevError => ({ ...prevError, [name]: '' }));\r\n//         }\r\n//   }\r\n\r\n\r\n//   function validateForm() {\r\n//     const newError = {};\r\n//     if(!values.name) newError.name = '* name is required';\r\n\r\n//     if(!values.email) newError.email = '* email is required';\r\n//     else if(!/\\S+@\\S+\\.\\S+/.test(values.email)) newError.email = '* Email is not valid';\r\n//     if(!values.length < 6) newError.password = '* password atlest 6 digit'\r\n//   }\r\n\r\n//   const handelSumbit = (e) =>{\r\n//     e.preventDefault();\r\n//     if(!validateForm){\r\n//         return;\r\n//     }\r\n//   }\r\nconst [values, setValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n\r\n    let errorMsg = '';\r\n    if (name === 'name' && value.length < 5) {\r\n      errorMsg = '* Name must be at least 5 characters';\r\n    } else if (name === 'email' && !/\\S+@\\S+\\.\\S+/.test(value)) {\r\n      errorMsg = '* Email is not valid';\r\n    } else if (name === 'password' && value.length < 6) {\r\n      errorMsg = '* Password must be at least 6 characters';\r\n    }\r\n\r\n    setError({\r\n      ...error,\r\n      [name]: errorMsg\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newError = {};\r\n    if (!values.name) newError.name = '* Name is required';\r\n    if (!values.email) newError.email = '* Email is required';\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) newError.email = '* Email is not valid';\r\n    if (!values.password) newError.password = '* Password is required';\r\n    else if (values.password.length < 6) newError.password = '* Password must be at least 6 characters';\r\n\r\n    setError(newError);\r\n    return Object.keys(newError).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      console.log('Form submitted successfully', values);\r\n      // Add your form submission logic here\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form  onSubmit={handleSubmit}>\r\n            <div>Form</div>\r\n            <div>\r\n                <label>Enter Name : </label>\r\n                <input type='text' placeholder='text name' value={values.name} name='name' onChange={handleChange} />\r\n                {error.name && <span className='error'>{error.name}</span>}\r\n            </div>\r\n            <div>\r\n                <label>Enter email : </label>\r\n                <input type='text' placeholder='text email' value={values.email} name='email' onChange={handleChange} />\r\n                {error.email && <span className='error'>{error.email}</span>}\r\n            </div>\r\n            <div>\r\n                <label>Password : </label>\r\n                <input type='password' placeholder='password' value={values.password} name='password' onChange={handleChange} />\r\n                {error.password && <span className='error'>{error.password}</span>}\r\n            </div>\r\n            <input type='submit' value= \"create\" />\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;"],"mappings":";;AAAC,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IACjCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IACjCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCT,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACE,IAAI,GAAGO;IACV,CAAC,CAAC;IAEF,IAAIE,QAAQ,GAAG,EAAE;IACjB,IAAIT,IAAI,KAAK,MAAM,IAAIO,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACvCD,QAAQ,GAAG,sCAAsC;IACnD,CAAC,MAAM,IAAIT,IAAI,KAAK,OAAO,IAAI,CAAC,cAAc,CAACW,IAAI,CAACJ,KAAK,CAAC,EAAE;MAC1DE,QAAQ,GAAG,sBAAsB;IACnC,CAAC,MAAM,IAAIT,IAAI,KAAK,UAAU,IAAIO,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MAClDD,QAAQ,GAAG,0CAA0C;IACvD;IAEAL,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACH,IAAI,GAAGS;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,CAAC,CAAC;IACnB,IAAI,CAACf,MAAM,CAACE,IAAI,EAAEa,QAAQ,CAACb,IAAI,GAAG,oBAAoB;IACtD,IAAI,CAACF,MAAM,CAACG,KAAK,EAAEY,QAAQ,CAACZ,KAAK,GAAG,qBAAqB,CAAC,KACrD,IAAI,CAAC,cAAc,CAACU,IAAI,CAACb,MAAM,CAACG,KAAK,CAAC,EAAEY,QAAQ,CAACZ,KAAK,GAAG,sBAAsB;IACpF,IAAI,CAACH,MAAM,CAACI,QAAQ,EAAEW,QAAQ,CAACX,QAAQ,GAAG,wBAAwB,CAAC,KAC9D,IAAIJ,MAAM,CAACI,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAEG,QAAQ,CAACX,QAAQ,GAAG,0CAA0C;IAEnGE,QAAQ,CAACS,QAAQ,CAAC;IAClB,OAAOC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACH,MAAM,KAAK,CAAC;EAC3C,CAAC;EAED,MAAMM,YAAY,GAAIV,CAAC,IAAK;IAC1BA,CAAC,CAACW,cAAc,CAAC,CAAC;IAClB,IAAIL,YAAY,CAAC,CAAC,EAAE;MAClBM,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAErB,MAAM,CAAC;MAClD;IACF;EACF,CAAC;EAGD,oBACEH,OAAA;IAAAyB,QAAA,eACIzB,OAAA;MAAO0B,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBAC1BzB,OAAA;QAAAyB,QAAA,EAAK;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACf9B,OAAA;QAAAyB,QAAA,gBACIzB,OAAA;UAAAyB,QAAA,EAAO;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5B9B,OAAA;UAAO+B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,WAAW;UAACpB,KAAK,EAAET,MAAM,CAACE,IAAK;UAACA,IAAI,EAAC,MAAM;UAAC4B,QAAQ,EAAEvB;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpGtB,KAAK,CAACH,IAAI,iBAAIL,OAAA;UAAMkC,SAAS,EAAC,OAAO;UAAAT,QAAA,EAAEjB,KAAK,CAACH;QAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACN9B,OAAA;QAAAyB,QAAA,gBACIzB,OAAA;UAAAyB,QAAA,EAAO;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7B9B,OAAA;UAAO+B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,YAAY;UAACpB,KAAK,EAAET,MAAM,CAACG,KAAM;UAACD,IAAI,EAAC,OAAO;UAAC4B,QAAQ,EAAEvB;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACvGtB,KAAK,CAACF,KAAK,iBAAIN,OAAA;UAAMkC,SAAS,EAAC,OAAO;UAAAT,QAAA,EAAEjB,KAAK,CAACF;QAAK;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN9B,OAAA;QAAAyB,QAAA,gBACIzB,OAAA;UAAAyB,QAAA,EAAO;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1B9B,OAAA;UAAO+B,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACpB,KAAK,EAAET,MAAM,CAACI,QAAS;UAACF,IAAI,EAAC,UAAU;UAAC4B,QAAQ,EAAEvB;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/GtB,KAAK,CAACD,QAAQ,iBAAIP,OAAA;UAAMkC,SAAS,EAAC,OAAO;UAAAT,QAAA,EAAEjB,KAAK,CAACD;QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACN9B,OAAA;QAAO+B,IAAI,EAAC,QAAQ;QAACnB,KAAK,EAAE;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAA5B,EAAA,CA/HKD,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAiIV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}