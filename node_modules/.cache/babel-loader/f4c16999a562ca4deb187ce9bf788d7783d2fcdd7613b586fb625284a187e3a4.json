{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const createUser = createAsyncThunk(\"createUser\", async (data, rejectWithValue) => {\n  const response = await axios.post(\"\");\n  try {\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const userDetail = createSlice({\n  name: \"userDetail\",\n  initialState: {\n    user: [],\n    loading: false,\n    error: null\n  }\n});\nexport default userDetail.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createUser","data","rejectWithValue","response","post","result","json","error","userDetail","name","initialState","user","loading","reducer"],"sources":["E:/react-crud/my-app/src/features/userDatailsSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\nexport const createUser = createAsyncThunk(\"createUser\", async (data, rejectWithValue)=>{\r\n\r\n    const response = await axios.post(\"\")\r\n\r\n    try{\r\n        const result = await response.json();\r\n        return result;\r\n    }catch(error){\r\n        return rejectWithValue(error);\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\nexport const userDetail = createSlice({\r\n    name : \"userDetail\",\r\n    initialState : {\r\n        user : [],\r\n        loading : false,\r\n        error : null,\r\n    },\r\n});\r\n\r\nexport default userDetail.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,YAAY,EAAE,OAAOG,IAAI,EAAEC,eAAe,KAAG;EAEpF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,EAAE,CAAC;EAErC,IAAG;IACC,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACjB,CAAC,QAAME,KAAK,EAAC;IACT,OAAOL,eAAe,CAACK,KAAK,CAAC;EACjC;AAGJ,CAAC,CAAC;AAIF,OAAO,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAClCY,IAAI,EAAG,YAAY;EACnBC,YAAY,EAAG;IACXC,IAAI,EAAG,EAAE;IACTC,OAAO,EAAG,KAAK;IACfL,KAAK,EAAG;EACZ;AACJ,CAAC,CAAC;AAEF,eAAeC,UAAU,CAACK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}